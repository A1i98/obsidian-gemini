plugin:gemini-scribe:177 Available tools from registry: (8) [ol, rl, sl, al, ll, ul, cl, Er]
plugin:gemini-scribe:177 Number of tools: 8
plugin:gemini-scribe:177 Tool names: (8) ['read_file', 'write_file', 'list_files', 'create_folder', 'delete_file', 'move_file', 'search_files', 'google_search']
plugin:gemini-scribe:177 Agent view using non-streaming API for tool support
plugin:gemini-scribe:170 DEBUG: generateModelResponse called with request: {userMessage: 'Did you get an answer?', conversationHistory: Array(2), model: 'gemini-2.5-flash', prompt: 'You are assisting me in exploring, clarifying, and…he .md \nextension.\n\n\nUser: Did you get an answer?', renderContent: false, …}
plugin:gemini-scribe:170 DEBUG: About to call generateContent with config: {
  "systemInstruction": "You are a note-taking and writing assistant embedded in my Obsidian note vault.\nYour primary goal is to help me stay organized by surfacing information from my \nnotes and any linked notes, and to assist me in drafting and refining my \nwriting based on this context. \n\nToday's date is: 7/11/2025\nThe current time is: 9:16:38 PM\n\nAssume that I am the author of all content unless specified otherwise, and you\ncan refer to me as Allen.\n\nUnless otherwise specified please respond to me in the same language I use with \nyou. My user interface is set to the language code: en. Use that\nlanguage if you are uncertain about the language to use.\n\n\nYou should always respond with plain text. **Do not use HTML-escaped entities**  \nlike `&quot;`, `&#x27;`, or `&amp;`. Instead, always render characters as their unescaped  \nequivalents (e.g., `\"` for quotes, `'` for apostrophes, `&` for ampersands).  \nUse Markdown formatting if necessary for clarity and style.\n\nIf a question cannot be answered from my notes, supplement your response with\nexternal information as needed.\n\n## Available Tools\n\nYou have access to the following tools that you can use to help answer questions:\n\n### read_file\nRead the contents of a file in the vault\nParameters:\n- path: string (required) - Path to the file to read\n\n### write_file\nWrite content to a file in the vault (creates new file or overwrites existing)\nParameters:\n- path: string (required) - Path to the file to write\n- content: string (required) - Content to write to the file\n\n### list_files\nList files and folders in a directory\nParameters:\n- path: string (required) - Path to the directory to list (empty string for root)\n- recursive: boolean - Whether to list files recursively\n\n### create_folder\nCreate a new folder in the vault\nParameters:\n- path: string (required) - Path of the folder to create\n\n### delete_file\nDelete a file or folder from the vault\nParameters:\n- path: string (required) - Path of the file or folder to delete\n\n### move_file\nMove or rename a file in the vault\nParameters:\n- sourcePath: string (required) - Current path of the file to move\n- targetPath: string (required) - New path for the file (including filename)\n\n### search_files\nSearch for files in the vault by name pattern\nParameters:\n- pattern: string (required) - Search pattern (supports wildcards: * matches any characters, ? matches single character)\n- limit: number - Maximum number of results to return\n\n### google_search\nSearch Google for current information from the web\nParameters:\n- query: string (required) - The search query to send to Google\n\nTo use a tool, you MUST make a function call. The system will execute the tool and provide the results.\n\n**IMPORTANT**: When the user asks you to:\n- Create, write, or save content → USE the write_file tool\n- List files → USE the list_files tool\n- Read files → USE the read_file tool\n- Search files → USE the search_files tool\n\nDO NOT just describe what you would do. ALWAYS use the appropriate tool to complete the task.\nExample: If asked to \"create a file\", you must call write_file with the path and content.\n",
  "temperature": 1,
  "topP": 0.95,
  "tools": [
    {
      "functionDeclarations": [
        {
          "name": "read_file",
          "description": "Read the contents of a file in the vault",
          "parameters": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Path to the file to read"
              }
            },
            "required": [
              "path"
            ]
          }
        },
        {
          "name": "write_file",
          "description": "Write content to a file in the vault (creates new file or overwrites existing)",
          "parameters": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Path to the file to write"
              },
              "content": {
                "type": "string",
                "description": "Content to write to the file"
              }
            },
            "required": [
              "path",
              "content"
            ]
          }
        },
        {
          "name": "list_files",
          "description": "List files and folders in a directory",
          "parameters": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Path to the directory to list (empty string for root)"
              },
              "recursive": {
                "type": "boolean",
                "description": "Whether to list files recursively"
              }
            },
            "required": [
              "path"
            ]
          }
        },
        {
          "name": "create_folder",
          "description": "Create a new folder in the vault",
          "parameters": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Path of the folder to create"
              }
            },
            "required": [
              "path"
            ]
          }
        },
        {
          "name": "delete_file",
          "description": "Delete a file or folder from the vault",
          "parameters": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Path of the file or folder to delete"
              }
            },
            "required": [
              "path"
            ]
          }
        },
        {
          "name": "move_file",
          "description": "Move or rename a file in the vault",
          "parameters": {
            "type": "object",
            "properties": {
              "sourcePath": {
                "type": "string",
                "description": "Current path of the file to move"
              },
              "targetPath": {
                "type": "string",
                "description": "New path for the file (including filename)"
              }
            },
            "required": [
              "sourcePath",
              "targetPath"
            ]
          }
        },
        {
          "name": "search_files",
          "description": "Search for files in the vault by name pattern",
          "parameters": {
            "type": "object",
            "properties": {
              "pattern": {
                "type": "string",
                "description": "Search pattern (supports wildcards: * matches any characters, ? matches single character)"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of results to return"
              }
            },
            "required": [
              "pattern"
            ]
          }
        },
        {
          "name": "google_search",
          "description": "Search Google for current information from the web",
          "parameters": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "The search query to send to Google"
              }
            },
            "required": [
              "query"
            ]
          }
        }
      ]
    }
  ]
}
plugin:gemini-scribe:170 DEBUG: generateContent called
plugin:gemini-scribe:170 DEBUG: Full model result: {
  "candidates": [
    {
      "content": {
        "role": "model"
      },
      "finishReason": "STOP",
      "index": 0
    }
  ],
  "modelVersion": "gemini-2.5-flash",
  "usageMetadata": {
    "promptTokenCount": 1678,
    "totalTokenCount": 3888,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 1678
      }
    ],
    "thoughtsTokenCount": 2210
  }
}
plugin:gemini-scribe:170 DEBUG: Parsed response: {
  "markdown": "",
  "rendered": ""
}
